token : /Define metadata.\n                           lexical unit : COMMENT        
token : identification                                lexical unit : IDENTIFICATION_KEYWORD
token : division                                      lexical unit : DIVISION_KEYWORD
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : program-id                                    lexical unit : PROGRAM_ID_KEYWORD
token : .                                             lexical unit : DOT            
token : Algo-Euclide                                  lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : author                                        lexical unit : AUTHOR_KEYWORD 
token : .                                             lexical unit : DOT            
token : Euclide                                       lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : date-written                                  lexical unit : DATE_WRITTEN_KEYWORD
token : .                                             lexical unit : DOT            
token : 300                                           lexical unit : INTEGER        
token : BNC                                           lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /Define compiler parameters.\n                lexical unit : COMMENT        
token : environment                                   lexical unit : ENVIRONMENT_KEYWORD
token : division                                      lexical unit : DIVISION_KEYWORD
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : configuration                                 lexical unit : CONFIGURATION_KEYWORD
token : section                                       lexical unit : SECTION_KEYWORD
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : source-computer                               lexical unit : SOURCE_COMPUTER_KEYWORD
token : .                                             lexical unit : DOT            
token : x8086                                         lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : object-computer                               lexical unit : OBJECT_COMPUTER_KEYWORD
token : .                                             lexical unit : DOT            
token : LLVM                                          lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /Define our variables.\n                      lexical unit : COMMENT        
token : data                                          lexical unit : DATA_KEYWORD   
token : division                                      lexical unit : DIVISION_KEYWORD
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /we define 3 variables (a, b, c).\n           lexical unit : COMMENT        
token : working-storage                               lexical unit : WORKING_STORAGE_KEYWORD
token : section                                       lexical unit : SECTION_KEYWORD
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /s for signed.\n                              lexical unit : COMMENT        
token : 77                                            lexical unit : INTEGER        
token : a                                             lexical unit : IDENTIFIER     
token : s9(5)                                         lexical unit : IMAGE          
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /9 for digit (int).\n                         lexical unit : COMMENT        
token : 77                                            lexical unit : INTEGER        
token : b                                             lexical unit : IDENTIFIER     
token : s9(5)                                         lexical unit : IMAGE          
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /(5) for 5 digits.\n                          lexical unit : COMMENT        
token : 77                                            lexical unit : INTEGER        
token : c                                             lexical unit : IDENTIFIER     
token : s9(5)                                         lexical unit : IMAGE          
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /code of our program.\n                       lexical unit : COMMENT        
token : procedure                                     lexical unit : PROCEDURE_KEYWORD
token : division                                      lexical unit : DIVISION_KEYWORD
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : main                                          lexical unit : IDENTIFIER     
token : section                                       lexical unit : SECTION_KEYWORD
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : * Euclide's Algorithm.\n                      lexical unit : COMMENT        
token : /The first label is the start point.\n        lexical unit : COMMENT        
token : start                                         lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /read int from stdin and put it into a.\n     lexical unit : COMMENT        
token : accept                                        lexical unit : ACCEPT_KEYWORD 
token : a                                             lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /read int from stdin and put it into b.\n     lexical unit : COMMENT        
token : accept                                        lexical unit : ACCEPT_KEYWORD 
token : b                                             lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /call find label until b equals 0.\n          lexical unit : COMMENT        
token : perform                                       lexical unit : PERFORM_KEYWORD
token : find                                          lexical unit : IDENTIFIER     
token : until                                         lexical unit : UNTIL_KEYWORD  
token : b                                             lexical unit : IDENTIFIER     
token : =                                             lexical unit : EQUALS_SIGN    
token : 0                                             lexical unit : INTEGER        
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /write 'valeur:' on stdout.\n                 lexical unit : COMMENT        
token : display                                       lexical unit : DISPLAY_KEYWORD
token : 'valeur:'                                     lexical unit : STRING         
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /write the content of a on stdout.\n          lexical unit : COMMENT        
token : display                                       lexical unit : DISPLAY_KEYWORD
token : a                                             lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /stop the program.\n                          lexical unit : COMMENT        
token : stop                                          lexical unit : STOP_KEYWORD   
token : run                                           lexical unit : RUN_KEYWORD    
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /create a label called 'find'.\n              lexical unit : COMMENT        
token : find                                          lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : move                                          lexical unit : MOVE_KEYWORD   
token : c                                             lexical unit : IDENTIFIER     
token : to                                            lexical unit : TO_KEYWORD     
token : b                                             lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /call diff label until a is less than b.\n    lexical unit : COMMENT        
token : perform                                       lexical unit : PERFORM_KEYWORD
token : diff                                          lexical unit : IDENTIFIER     
token : until                                         lexical unit : UNTIL_KEYWORD  
token : a                                             lexical unit : IDENTIFIER     
token : <                                             lexical unit : LOWER_SIGN     
token : b                                             lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /put the value of a into b.\n                 lexical unit : COMMENT        
token : move                                          lexical unit : MOVE_KEYWORD   
token : a                                             lexical unit : IDENTIFIER     
token : to                                            lexical unit : TO_KEYWORD     
token : b                                             lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /put the value of c into a.\n                 lexical unit : COMMENT        
token : move                                          lexical unit : MOVE_KEYWORD   
token : c                                             lexical unit : IDENTIFIER     
token : to                                            lexical unit : TO_KEYWORD     
token : a                                             lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : /create a label called 'diff'.\n              lexical unit : COMMENT        
token : diff                                          lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
token : * Compute a modulo b.\n                       lexical unit : COMMENT        
token : /a becomes a-b.\n                             lexical unit : COMMENT        
token : substract                                     lexical unit : SUBSTRACT_KEYWORD
token : b                                             lexical unit : IDENTIFIER     
token : from                                          lexical unit : FROM_KEYWORD   
token : a                                             lexical unit : IDENTIFIER     
token : .\n                                           lexical unit : END_OF_INSTRUCTION
variables
a                       s9(5)          
b                       s9(5)          
c                       s9(5)          
labels
diff                    43             
find                    32             
start                   26             
